# Base image with ARG for PostgreSQL version
ARG PG_VERSION
# Build pgvector extension
FROM postgres:${PG_VERSION}-alpine AS pgvector-builder

# Set environment variables
ARG PG_VERSION

# Install required packages for building pgvector
RUN apk add --no-cache \
    git \
    build-base \
    clang15 \
    clang15-dev \
    llvm15 \
    gcc \
    musl-dev

# Clone the pgvector repository and checkout the specific version
WORKDIR /home
RUN git clone --branch v0.7.4 https://github.com/pgvector/pgvector.git

# Build and install the pgvector extension
WORKDIR /home/pgvector

RUN make && make install

# Final image with PostgreSQL and pgvector installed
FROM postgres:${PG_VERSION}-alpine

# Copy the pgvector build artifacts from the first stage
COPY --from=pgvector-builder /usr/local/lib/postgresql/bitcode/vector.index.bc /usr/local/lib/postgresql/bitcode/vector.index.bc
COPY --from=pgvector-builder /usr/local/lib/postgresql/vector.so /usr/local/lib/postgresql/vector.so
COPY --from=pgvector-builder /usr/local/share/postgresql/extension /usr/local/share/postgresql/extension

# Default entrypoint and command
ENTRYPOINT ["docker-entrypoint.sh"]
CMD ["postgres"]

# Stopsignal for clean shutdown
STOPSIGNAL SIGINT
